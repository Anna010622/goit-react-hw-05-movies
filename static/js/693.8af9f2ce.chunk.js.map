{"version":3,"file":"static/js/693.8af9f2ce.chunk.js","mappings":"8MAGaA,EAAOC,EAAAA,EAAAA,GAAH,gDAIJC,EAAOD,EAAAA,EAAAA,GAAH,8EAMJE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,KAAPH,CAAH,iL,SCVdI,EAAgBC,EAAQ,MAAxBD,YA0BR,EAxBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,EAAWH,IAEjB,OACE,SAACL,EAAD,iBACGO,QADH,IACGA,OADH,EACGA,EAAQE,KAAI,SAAAC,GAAK,OAChB,SAACR,EAAD,WACE,SAACC,EAAD,CAAWQ,GAAE,kBAAaD,EAAME,IAAMC,MAAOL,EAA7C,SACGE,EAAMI,SAFAJ,EAAME,GADD,KASvB,C,0FChBYG,GAAmBd,E,QAAAA,IAAOe,EAAAA,EAAPf,CAAH,ia,SCCd,SAASgB,EAAT,GAAgE,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,cAAeC,EAAQ,EAARA,KAKpE,OACE,SAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,SAACP,EAAD,CACEQ,MAAOL,EACPM,YAAaJ,EACbA,KAAMA,EACNK,SAVe,SAACC,EAAOC,GAC3BR,EAAcQ,EACf,KAYF,C,2HCjBKC,EAAW,mCAAG,WAAMR,GAAN,kGAEOS,EAAAA,EAAAA,IAAA,wHAC4FT,IAHnG,cAEVU,EAFU,gBAKGA,EAASC,KALZ,cAKVA,EALU,yBAMTA,GANS,kCAQhBC,QAAQC,MAAR,MARgB,0DAAH,sDAYjB,I,6BCZaC,E,QAAQjC,EAAAA,GAAH,gD,6BC0ClB,EApCa,WACX,OAA4BkC,EAAAA,EAAAA,UAAS,MAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAAoCD,EAAAA,EAAAA,UAAS,MAA7C,eAAOjB,EAAP,KAAmBmB,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,iBAAgB,CAAElB,KAAM,IAAhE,eAAOmB,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,sGACHd,EAAYW,EAAaI,IAAI,SAD1B,OAChBZ,EADgB,OAEhBa,EAAeb,EAAKc,QAC1BR,EAAcN,EAAKe,aACnBV,EAAUQ,GAJY,2CAAH,qDAMrBF,GACD,GAAE,CAACH,IAOJ,OACE,iCACE,SAACL,EAAD,UAAO,oBACP,SAACa,EAAA,EAAD,CAAWxC,OAAQA,IAElBW,IACC,SAACF,EAAA,EAAD,CACEE,WAAYA,EACZC,cAbe,SAAAQ,GACrBa,EAAgB,CACdpB,KAAMO,GAET,EAUOP,KAAM4B,OAAOT,EAAaI,IAAI,aAKvC,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","api/get-trending.js","components/pages/Home/Home.styled.jsx","components/pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: block;\n  transition: font-size 250ms linear, color 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: #22c33a;\n    font-size: 18px;\n  }\n`;\n","import { PropTypes } from 'prop-types';\nimport { List, Item, MovieLink } from './MovieList.styled';\n\nconst { useLocation } = require('react-router-dom');\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies?.map(movie => (\n        <Item key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={location}>\n            {movie.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import Pagination from '@mui/material/Pagination';\nimport styled from 'styled-components';\n\nexport const StyledPagination = styled(Pagination)`\n  & .css-yuzg60-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected {\n    background: linear-gradient(\n      0deg,\n      rgba(34, 195, 58, 1) 0%,\n      rgba(253, 187, 45, 1) 100%\n    );\n  }\n  & .css-yuzg60-MuiButtonBase-root-MuiPaginationItem-root:hover {\n    background: linear-gradient(\n      0deg,\n      rgba(34, 195, 58, 1) 0%,\n      rgba(253, 187, 45, 1) 100%\n    );\n  }\n`;\n","import Stack from '@mui/material/Stack';\nimport { StyledPagination } from './Pagination.styled';\nimport { PropTypes } from 'prop-types';\n\nexport default function PaginationRanges({ totalPages, onButtonClick, page }) {\n  const handleChange = (event, value) => {\n    onButtonClick(value);\n  };\n\n  return (\n    <Stack spacing={2}>\n      <StyledPagination\n        count={totalPages}\n        defaultPage={page}\n        page={page}\n        onChange={handleChange}\n      />\n    </Stack>\n  );\n}\n\nPaginationRanges.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n};\n","import axios from 'axios';\n\nconst getTrending = async page => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?language=en-US&api_key=d4182ef1b885bf3cba37062e5c58a7c6&page=${page}`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default getTrending;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n`;\n","import getTrending from 'api/get-trending';\nimport { useEffect, useState } from 'react';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport { Title } from './Home.styled';\nimport PaginationRanges from 'components/Pagination/Pagination';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [totalPages, setTotalPages] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n\n  useEffect(() => {\n    const getTrendingList = async () => {\n      const data = await getTrending(searchParams.get('page'));\n      const trendingList = data.results;\n      setTotalPages(data.total_pages);\n      setMovies(trendingList);\n    };\n    getTrendingList();\n  }, [searchParams]);\n\n  const setCurrentPage = value => {\n    setSearchParams({\n      page: value,\n    });\n  };\n  return (\n    <>\n      <Title>Trending today</Title>\n      <MovieList movies={movies} />\n\n      {totalPages && (\n        <PaginationRanges\n          totalPages={totalPages}\n          onButtonClick={setCurrentPage}\n          page={Number(searchParams.get('page'))}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","Item","MovieLink","Link","useLocation","require","movies","location","map","movie","to","id","state","title","StyledPagination","Pagination","PaginationRanges","totalPages","onButtonClick","page","Stack","spacing","count","defaultPage","onChange","event","value","getTrending","axios","response","data","console","error","Title","useState","setMovies","setTotalPages","useSearchParams","searchParams","setSearchParams","useEffect","getTrendingList","get","trendingList","results","total_pages","MovieList","Number"],"sourceRoot":""}