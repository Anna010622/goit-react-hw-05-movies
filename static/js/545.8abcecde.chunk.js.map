{"version":3,"file":"static/js/545.8abcecde.chunk.js","mappings":"yPAEMA,EAAe,mCAAG,WAAMC,GAAN,kGAEGC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,6DAFH,cAEdE,EAFc,gBAKDA,EAASC,KALR,cAKdA,EALc,yBAMbA,GANa,kCAQpBC,QAAQC,MAAR,MARoB,0DAAH,sDAYrB,I,iDCXaC,EAAiBC,EAAAA,EAAAA,IAAH,+IAUdC,EAAeD,EAAAA,EAAAA,IAAH,8MAaZE,EAAQF,EAAAA,EAAAA,IAAH,+EAMLG,EAAUH,EAAAA,EAAAA,IAAH,mFAMPI,GAASJ,EAAAA,EAAAA,GAAOK,EAAAA,KAAPL,CAAH,iOAYNM,EAAmBN,EAAAA,EAAAA,GAAH,gDAIhBO,EAAkBP,EAAAA,EAAAA,GAAH,gFAKfQ,GAAkBR,EAAAA,EAAAA,GAAOK,EAAAA,KAAPL,CAAH,4K,mBC6B5B,EAzEqB,WAAO,IAAD,EACzB,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QACFoB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,QAAmB,KAU1C,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACE3B,EAAgBC,GADlB,OACXG,EADW,OAEjBe,EAASf,GAFQ,2CAAH,qDAIhBuB,GACD,GAAE,CAAC1B,KAGF,4BACE,SAACW,EAAD,CAAQgB,GAAIL,EAASM,QAArB,SAA8B,aAE9B,UAACtB,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CACEoB,KACO,OAALZ,QAAK,IAALA,OAAA,EAAAA,EAAOa,cAAP,yCACkCb,EAAMa,aAE1CC,IAAI,eACJC,MAAO,SAGX,UAACtB,EAAD,YACE,+BAAKO,QAAL,IAAKA,OAAL,EAAKA,EAAOgB,SACZ,yBAAG,eAAaC,KAAKC,MAA4B,IAAjB,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOmB,eAAmB,QACrD,wBAAI,aACiB,MAAf,OAALnB,QAAK,IAALA,OAAA,EAAAA,EAAOoB,WACN,8BAAIpB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOoB,YAEX,uBAAG,0BAGL,wBAAI,YACE,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOqB,OAAOC,QAAS,GACtB,8BAAItB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOqB,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAEhD,uBAAG,uDAYT,4BACE,SAAC9B,EAAD,UAAkB,4BAClB,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAiBY,GAAG,OAApB,SAA2B,YAE7B,yBACE,SAACZ,EAAD,CAAiBY,GAAG,UAApB,SAA8B,qBAIpC,SAAC,EAAAiB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/get-movie-details.js","components/pages/MovieDetalis/MovieDetails.styled.jsx","components/pages/MovieDetalis/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=d4182ef1b885bf3cba37062e5c58a7c6`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default getMovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n\n  @media (max-width: 767.98px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  flex-grow: 1;\n  min-width: 255px;\n  height: 356px;\n  border-radius: 5px;\n  overflow: hidden;\n\n  @media (max-width: 767.98px) {\n    min-width: 100%;\n    height: auto;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  margin-bottom: 15px;\n  padding: 5px;\n  border-radius: 5px;\n  background: linear-gradient(\n    0deg,\n    rgba(34, 195, 58, 1) 0%,\n    rgba(253, 187, 45, 1) 100%\n  );\n`;\n\nexport const InformationTitle = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const InformationList = styled.ul`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\nexport const InformationLink = styled(Link)`\n  color: #22c33a;\n  text-decoration: underline;\n  text-underline-offset: 3px;\n\n  &:hover,\n  &:focus {\n    color: rgba(253, 187, 45, 1);\n  }\n`;\n","import getMovieDetails from 'api/get-movie-details';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  DetailsWrapper,\n  ImageWrapper,\n  Image,\n  Details,\n  Button,\n  InformationLink,\n  InformationTitle,\n  InformationList,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state ?? '/');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      const data = await getMovieDetails(movieId);\n      setMovie(data);\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Button to={backLink.current}>Go back</Button>\n\n      <DetailsWrapper>\n        <ImageWrapper>\n          <Image\n            src={\n              movie?.poster_path &&\n              `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            }\n            alt=\"movie poster\"\n            width={250}\n          />\n        </ImageWrapper>\n        <Details>\n          <h1>{movie?.title}</h1>\n          <p>User Score: {Math.round(movie?.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          {movie?.overview !== '' ? (\n            <p>{movie?.overview}</p>\n          ) : (\n            <p>There is no overview</p>\n          )}\n\n          <h2>Genres</h2>\n          {movie?.genres.length > 0 ? (\n            <p>{movie?.genres.map(genre => genre.name).join(' / ')}</p>\n          ) : (\n            <p>Sorry, there is no information about genres</p>\n          )}\n\n          {/* <ul>\n            {movie?.genres.map(genre => (\n              <li key={genre.id}>\n                <p>{genre.name}</p>\n              </li>\n            ))}\n          </ul> */}\n        </Details>\n      </DetailsWrapper>\n      <div>\n        <InformationTitle>Additional information</InformationTitle>\n        <InformationList>\n          <li>\n            <InformationLink to=\"cast\">Cast</InformationLink>\n          </li>\n          <li>\n            <InformationLink to=\"reviews\">Reviews</InformationLink>\n          </li>\n        </InformationList>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieDetails","movieId","axios","response","data","console","error","DetailsWrapper","styled","ImageWrapper","Image","Details","Button","Link","InformationTitle","InformationList","InformationLink","useState","movie","setMovie","useParams","location","useLocation","backLink","useRef","state","useEffect","getDetails","to","current","src","poster_path","alt","width","title","Math","round","vote_average","overview","genres","length","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}