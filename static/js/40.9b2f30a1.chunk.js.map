{"version":3,"file":"static/js/40.9b2f30a1.chunk.js","mappings":"kOAEMA,EAAY,mCAAG,WAAMC,GAAN,kGAEMC,EAAAA,EAAAA,IAAA,oDACwBD,EADxB,wFAFN,cAEXE,EAFW,gBAKEA,EAASC,KALX,cAKXA,EALW,yBAMVA,GANU,kCAQjBC,QAAQC,MAAR,MARiB,0DAAH,sDAYlB,I,mCCiDA,EA3De,WAAO,IAAD,EACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAgCjB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,uFACY,KAA9BL,EAAaM,IAAI,SADC,gCAEDjB,EAAaW,GAFZ,OAEdP,EAFc,OAGpBK,EAAUL,EAAKc,SAHK,2CAAH,qDAOrBF,GACD,GAAE,CAACL,KAGF,4BAEE,2BACE,kBACEQ,KAAK,OACLC,SApCkB,SAAAC,GACxBT,EACyB,KAAvBS,EAAMC,OAAOC,MAAe,CAAEtB,MAAOoB,EAAMC,OAAOC,OAAU,CAAC,EAEhE,EAiCOA,MAAK,UAAEZ,EAAaM,IAAI,gBAAnB,QAA+B,QAIxC,wBACGT,EAAOgB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAOf,EAAhC,SACGY,EAAMI,SAFFJ,EAAME,GADA,QAUxB,C","sources":["api/search-movies.js","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?${query}&api_key=d4182ef1b885bf3cba37062e5c58a7c6&include_adult=false&language=en-US&page=1`\n    );\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default searchMovies;\n","import searchMovies from 'api/search-movies';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const handleInputChange = event => {\n    setSearchParams(\n      event.target.value !== '' ? { query: event.target.value } : {}\n    );\n  };\n\n  // const getSearchMovies = async () => {\n  //   if (searchParams.get('query') !== '') {\n  //     const data = await searchMovies(searchParams);\n  //     setMovies(data.results);\n  //   }\n  // };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   getSearchMovies();\n  // };\n\n  useEffect(() => {\n    const getSearchMovies = async () => {\n      if (searchParams.get('query') !== '') {\n        const data = await searchMovies(searchParams);\n        setMovies(data.results);\n      }\n    };\n\n    getSearchMovies();\n  }, [searchParams]);\n\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit}>*/}\n      <form>\n        <input\n          type=\"text\"\n          onChange={handleInputChange}\n          value={searchParams.get('query') ?? ''}\n        />\n        {/* <button type=\"submit\">Search</button> */}\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={location}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["searchMovies","query","axios","response","data","console","error","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","getSearchMovies","get","results","type","onChange","event","target","value","map","movie","to","id","state","title"],"sourceRoot":""}